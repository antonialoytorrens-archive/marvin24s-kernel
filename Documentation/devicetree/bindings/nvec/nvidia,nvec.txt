NVIDIA compliant embedded controller

The NVIDIA compliant embedded controller (short nvec) is a software API
which can be used to contol several functions of a multi-function-device (mfd).
Often this protocol is implemented in the firmware of an embedded controller,
where devices like keyboards or mice are attached to. Up to now, only early Tegra2
boards make use of this API.

Required properties:
- compatible : should be "nvidia,nvec".
- reg : the iomem of the i2c slave controller
- interrupts : the interrupt line of the i2c slave controller
- clock-frequency : the frequency of the i2c bus
- gpios : the gpio used for ec request
- slave-addr: the i2c address of the slave controller

Optional properties:
- nvidia,nvec-uses-kbd : enables support for a keyboard
                  -mouse : enables support for a ps2 mice
                  -power : enables support for a power adapter (battery and/or ac)
                  -events : enables support for receiving event send by the nvec

- nvidia,nvec-uses-oem = "board-name" : enables support for a board specific
	driver named "nvec-<board-name>". This can be used to add functions not
	provdided by the standard protocol.

- cells : can be used to add parameters to the mfd cells. Each child is named after
  the coresponding cell name:

	- events : This property configures which events to listen to and which events
	  should submitted to userspace upon receive. It add the following properties:
	  - linux,input-type (required) : specifies the linux specific event number
					    (e.g. EV_SW=5, EV_KEY=1)
	  - linux,code (required) : specifies the linux specific key code to submit
	  - nvec,event-status-mask (required) : specifies the nvec event to react on
						(bitmask with length 32)
	  - nvec,event-status (optional) : if set to "enabled", it activates the event
						on boot.
